name: Shamba Manager Continuous Integration
on: [push, pull_request]

jobs:
  setup-and-tests:
    runs-on: ubuntu-latest

    container: node:12.21.0-alpine3.12

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test_farm_manager
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Lint Code
        run: yarn lint

      - name: Integration tests
        run: yarn test
        env:
          NODE_CONFIG_ENV: test-ci

  release-to-heroku:
    runs-on: ubuntu-latest

    container: ruby:latest

    needs: setup-and-tests

    steps:
      - name: check tags
        id: check-tag
        shell: bash
        run: |
          if [[ $GITHUB_REF =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+-[0-9]+$ ]]; then
              echo "::set-output name=staging::true"
          elif [[ $GITHUB_REF =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "::set-output name=production::true"
          fi

      - name: install and update dpl dependencies
        if: steps.check-tag.outputs.staging == 'true' || steps.check-tag.outputs.production == 'true'
        run: |
          apt-get update -qy
          apt-get install -y ruby-dev
          gem install dpl --pre

      - name: deploy to staging environment
        if: steps.check-tag.outputs.staging == 'true'
        run: dpl heroku api --app=$HEROKU_APP_STAGING --api_key=$HEROKU_API_KEY

      - name: deploy to production environment
        if: steps.check-tag.outputs.production == 'true'
        run: dpl heroku api --app=$HEROKU_APP_PRODUCTION --api_key=$HEROKU_API_KEY
